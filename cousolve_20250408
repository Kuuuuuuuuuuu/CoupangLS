import pandas as pd
from sklearn.linear_model import LinearRegression
import math

# (1) 데이터 불러오기 및 전처리
df = pd.read_csv("C:\\Users\\RomainDHKuRecruiting\\Downloads\\TO_to_parcel.csv", header=None)

# 날짜와 총 물량 추출
dates = pd.to_datetime(df.iloc[1, 2:].values, format='%Y-%m-%d')  # 1행: 날짜
total_volume = df.iloc[189, 2:].replace(',', '', regex=True).astype(float).values  # 189행: 총 물량

# Wave 데이터 추출 및 필터링
wave_data = df.iloc[190:, :]  # 190행부터 끝까지
wave_data = wave_data[(wave_data.iloc[:, 1] != "Indirect") & (wave_data.iloc[:, 0].notna())]  # 1열이 "Indirect"가 아니고 0열이 NaN이 아닌 경우만 필터링

# ICH_3 캠프만 필터링
ich_3_data = wave_data[wave_data.iloc[:, 0] == "ICH_3"]

# 독립변수 준비
X = total_volume.reshape(-1, 1)  # 독립변수: 총 물량

# 캠프별 Wave별 회귀 모델 저장 및 예측 결과 저장
camp_wave_models = {}  # 캠프별 Wave별 회귀 모델 저장
camp_wave_predictions = {}  # 캠프별 Wave별 예측 결과 저장

# (2) ICH_3 캠프의 Wave별 데이터 처리 및 회귀 모델 학습
for index, row in ich_3_data.iterrows():
    camp_name = row[0]  # 0열의 캠프 이름
    wave_name = row[1]  # 1열의 Wave 이름
    print(f"Processing Camp: {camp_name}, Wave: {wave_name}")
    
    # 종속변수 준비 (Wave별 TO 데이터)
    y = row[2:].replace(',', '', regex=True).replace('-', '0').fillna(0).astype(float).values  # 2열부터 끝까지 숫자로 변환
    
    # 회귀 모델 학습
    model = LinearRegression()
    model.fit(X, y)
    
    # 캠프별 Wave별 모델 저장
    if camp_name not in camp_wave_models:
        camp_wave_models[camp_name] = {}
    camp_wave_models[camp_name][wave_name] = model

    # 회귀 모델 방정식 출력
    print(f"{camp_name} - {wave_name}_TO = {model.intercept_:.2f} + {model.coef_[0]:.8f} * total_volume")

# (3) 새로운 날의 물량 예측치에 따른 ICH_3 캠프의 Wave별 TO 예측
future_volume = 6788261  # 예측된 향후 특정 일의 총 물량 (예시 값)
camp_wave_predictions["ICH_3"] = {}
for wave_name, model in camp_wave_models["ICH_3"].items():
    wave_to_pred = model.predict([[future_volume]])[0]
    camp_wave_predictions["ICH_3"][wave_name] = wave_to_pred
    print(f"예상 ICH_3 - {wave_name} TO: {wave_to_pred:.1f}명")

# (4) 결과 정리 출력
print("\n최종 ICH_3 캠프의 Wave별 TO 예측 결과:")
for wave_name, wave_to_pred in camp_wave_predictions["ICH_3"].items():
    print(f"  {wave_name}: {wave_to_pred:.1f}명")

# 최근 날짜에 bias를 주자
# 0인 데이터(최근런칭)의 경우, 미반영으로 해보장장

                    
